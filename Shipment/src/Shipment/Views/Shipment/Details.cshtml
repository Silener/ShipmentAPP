@model Shipment.ViewModels.ShipmentDetailsViewModel
@using ShipmentCommonClasses.Enums

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>



@using (Html.BeginForm("Deliver", "Shipment"))
{
    bool readOnlyInputFields = Model.shipmentDetails.shipmentStatus != ShipmentStatus.ShipmentStatusOutForDelivery ? true :
    false;

    <div>
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.shipmentDetails.senderName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.shipmentDetails.senderName)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.shipmentDetails.senderAddress)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.shipmentDetails.senderAddress)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.shipmentDetails.receiverName )
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.shipmentDetails.receiverName)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.shipmentDetails.receiverAddress )
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.shipmentDetails.receiverAddress)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.shipmentDetails.trackingNumber )
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.shipmentDetails.trackingNumber)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.shipmentStatus )
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.shipmentStatus)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.shipmentDetails.customerAcceptance )
            </dt>
            <dd class="col-sm-10">
                @Html.DropDownListFor(m => m.shipmentDetails.customerAcceptance,
            Html.GetEnumSelectList(typeof(CustomerShipmentAcceptanceStatus)), readOnlyInputFields ? new{
            @style = "width:230px;", @disabled = "disabled" } : new{ @style = "width:230px;"})
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.shipmentDetails.packageIntegrity )
            </dt>
            <dd class="col-sm-10">
                @Html.DropDownListFor(m => m.shipmentDetails.packageIntegrity,
            Html.GetEnumSelectList(typeof(PackageIntegrity)), readOnlyInputFields ? new{
            @style = "width:230px;", @disabled = "disabled" } : new{ @style = "width:230px;"})
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.shipmentDetails.shipmentAdditionalNotes )
            </dt>
            <dt class="col-sm-2">
                @Html.TextAreaFor(m => m.shipmentDetails.shipmentAdditionalNotes, 10, 5, readOnlyInputFields ? new{
            @style = "width:230px;", @disabled = "disabled" } : new{ @style = "width:230px;"})
            </dt>

        </dl>
    </div>

    @Html.HiddenFor(m => m.shipmentDetails.shipmentStatus)

    <div hidden="hidden">
        @Html.EditorForModel()w
        @Html.EditorFor(model => model.shipmentStatus)
        @Html.EditorFor(model => model.shipmentDetails)
        @Html.EditorFor(model => model.shipmentDetails.shipmentStatus)
    </div>

    if (Model.validationMessages != null && Model.validationMessages.Count() > 0)
    {
        <div class="errorMessage">
            @foreach (var message in Model.validationMessages)
            {
                @Html.DisplayFor(model => message)
                <br />
            }
        </div>
    }
    <br />
    if (Model.shipmentDetails.shipmentStatus == ShipmentStatus.ShipmentStatusOutForDelivery)
    {
        <div>
            <input type="submit" name="Finalize" value="Deliver" class="btn btn-primary" />
            <input type="submit" name="Finalize" value="Hold" class="btn btn-primary" formaction="@Url.Action("Hold")"
        formmethod="post" />
        </div>
    }
    else
    {
        <div>
            <input type="submit" name="Finalize" value="Undo" class="btn btn-primary" formaction="@Url.Action("Undo")"
        formmethod="post" />
        </div>
    }
}

</br>
<div>
    <a asp-action="Index">Back to List</a>
</div>
